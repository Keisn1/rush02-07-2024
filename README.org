#+title: Readme
* Compilation

#+begin_src makefile
make fclean
make
#+end_src

** Makefile example

#+begin_src makefile
CC = cc
CFLAGS = -Wall -Wextra -Werror

all: example

example: example.c example2.o example3.o
	$(CC) $(CFLAGS) -o $@ example.c example2.o example3.o

example2.o: example2.c
	$(CC) $(CFLAGS) -c -o $@ example2.c

example3.o: example3.c
	$(CC) $(CFLAGS) -c -o $@ example3.c


fclean: ; rm -f example
#+end_src

1. Create Variables =CC= and =CFLAGS= to use them in compile command later
2. =all= specifies the name of the executable that needs to be created
   - every line like =name1: name2 name3= specifies a dependency, to build name1, one needs to built name2 and name3 first
   - make expects name2 and name3 to be built further along inside the makefile
3. Specification on how to build the object =.o= and the executable
   #+begin_src makefile
example: example.c example2.o example3.o
	$(CC) $(CFLAGS) -o $@ example.c example2.o example3.o

example2.o: example2.c
	$(CC) $(CFLAGS) -c -o $@ example2.c

example3.o: example3.c
	$(CC) $(CFLAGS) -c -o $@ example3.c
   #+end_src
4. =fclean= specifies how to remove all files generated by the build process
   - executables (=example=), object files (=*.o=), intermediate files, and any other build artifacts
   - leaves the project directory in a clean state


* Program execution
#+begin_src shell
$> ./rush-02 42 | cat -e
forty two$

$> ./rush-02 0 | cat -e
zero$

$> ./rush-02 10.4 | cat -e
Error$

$> ./rush-02 100000 | cat -e
one hundred thousand$

$> ./rush-02 new.dict 20 | cat -e
zwanzig !$
#+end_src
